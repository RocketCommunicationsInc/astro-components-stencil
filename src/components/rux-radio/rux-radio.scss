:host {
    *,
    *:before,
    *:after {
        box-sizing: inherit;
    }

    box-sizing: border-box;
    /**
    * @prop --controlLabelColor: Label text color
    */
    --controlLabelColor: var(--defaultText);
    /**
    * @prop --controlOutlineBackgroundColor: Checkbox background color
    */
    --controlOutlineBackgroundColor: var(--backgroundColor);
    /**
    * @prop --controlBorderColor: Checkbox border color
    */
    --controlBorderColor: var(--colorSecondaryDarken2);
    /**
    * @prop --controlHoverBorderColor: Checkbox border color on hover
    */
    --controlHoverBorderColor: var(--primaryLight);
    /**
    * @prop --controlTextColor: Selected checkbox icon color
    */
    --controlTextColor: var(--colorSecondary500);
    /**
    * @prop --controlSelectedOutlineBorderColor: Selected checkbox border color
    */
    --controlSelectedOutlineBorderColor: var(--primary);
}

.rux-form-field {
    display: flex;
    flex-direction: column;

    font-family: var(--fontFamily);
    font-size: var(--fontSize);
    color: var(--fontColor);
}

.rux-radio {
    display: flex;
    position: relative;
    // margin: 0 0 1rem 0;
    line-height: 1.2;

    input[type='radio'] {
        -webkit-appearance: none;
        display: none;

        + label {
            position: relative;
            display: flex;

            align-items: center;
            justify-content: flex-start;

            color: var(--controlLabelColor);
            letter-spacing: 0.5px;
            cursor: pointer;

            &:before {
                display: flex;
                flex-shrink: 0;
                flex-grow: 0;
                content: '';

                align-self: start;

                height: var(--controlOptionSize);
                width: var(--controlOptionSize);
                margin: 0 0.625rem 0 0;
                border: 1px solid var(--controlSelectedBorderColor);
                border-radius: 100%;
                background-color: var(--controlOutlineBackgroundColor);
            }

            &:after {
                position: absolute;
                top: 5px;
                display: flex;
                content: '';
            }
        }

        &:checked {
            + label {
                &::before {
                    background-color: var(
                        --controlSelectedOutlineBackgroundColor
                    );
                    border-color: var(--controlSelectedBorderColor);
                }

                &::after {
                    position: absolute;
                    top: 5px;
                    display: flex;
                    content: '';
                    left: 5px;
                    height: 8px;
                    width: 8px;
                    border-radius: 100%;
                    /* box-shadow: inset 0 0 1px 0 rgba(255, 255, 255, 0.9); */

                    background-color: var(--primary);
                }
            }
        }

        &:disabled {
            + label {
                cursor: var(--disabledCursor);
                opacity: var(--disabledOpacity);
            }
        }

        &:not(:disabled) {
            &:hover,
            &:checked:hover {
                + label {
                    &::before {
                        border-color: var(--controlHoverBorderColor);
                    }
                }
            }
        }

        &:not(:disabled) {
            &:checked:hover {
                + label {
                    &::after {
                        background-color: var(--controlBackgroundColor);
                    }
                }
            }
        }
    }
}
