:host {
    display: block;
    /**
      * @prop --switchBackgroundColor: the Switch off color
      */

    /**
      * @prop --switchHoverOnColor: the Switch hover on color
      */

    /**
      * @prop --switchHoverOffColor: the Switch hover off color
      */

    /**
      * @prop --switchOffBorderColor: the Switch off border color
      */
    padding-left: 1%;
}

.rux-form-field {
    display: flex;
    flex-direction: column;

    font-family: var(--fontFamily);
    font-size: var(--fontSize);
    color: var(--fontColor);
}

.rux-switch {
    position: relative;
    display: flex;
    height: 22px;
    width: 42px;

    // Default Styling
    &__button {
        display: flex;
        align-items: center;
        cursor: pointer;

        // Track
        &:before {
            position: relative;

            display: flex;
            content: '';

            border-radius: 4.7px;
            border: 1px solid;
            border-color: var(--switchOffBorderColor);
            background-color: var(--switchBackgroundColor);

            height: 10px;
            width: 30px;
            z-index: 2;
            transition: 0.1s background-color linear;
        }

        // Button
        &:after {
            position: absolute;
            content: '';
            top: 1px;
            left: -4px;
            z-index: 3;
            height: 18px;
            width: 18px;
            border-radius: 50%;
            border: 1px solid var(--switchHoverOffColor);
            background-color: var(--switchBackgroundColor);

            transition: 0.1s left linear, 0.1s border-color linear;
        }
    }

    &__input {
        display: none;

        // Active Styling
        &:checked {
            + .rux-switch__button {
                &::before {
                    border-color: var(--switchOnColor);
                    background-color: var(--switchOnColor);
                }
                &::after {
                    left: 16px;
                    background-color: var(--switchBackgroundColor);
                    border-color: var(--switchHoverOffColor);
                }
            }
        }

        // Disabled
        &:disabled {
            + .rux-switch__button {
                cursor: var(--disabledCursor);
                opacity: var(--disabledOpacity);
            }
        }
    }

    // :before -> Track, :after -> Button
    &:hover {
        .rux-switch__input {
            &:not(:disabled),
            &:checked:not(:disabled) {
                + .rux-switch__button {
                    &::before {
                        border-color: var(--switchHoverOffColor);
                    }
                    &:after {
                        border-color: var(--switchButtonHoverOffColor);
                    }
                }
            }

            &:not(:disabled) {
                + .rux-switch__button {
                    &::before {
                        background-color: var(--switchBackgroundColor);
                    }
                }
            }

            &:checked:not(:disabled) {
                + .rux-switch__button {
                    &:before {
                        background-color: var(--switchHoverOnColor);
                    }
                }
            }
        }
    }
}
